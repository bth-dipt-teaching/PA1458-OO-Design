#+Title: Release Sprint: Software Architecture and Testing
#+INCLUDE: "./org/header.org-in" org


* About this Sprint
  This is a /release sprint/. This means that you package things that you have done in other sprints in order to create a release (an assignment delivery). You are expected to integrate what you have learnt previously and test/evaluate your release candidate to maximise your potential for passing the assignment.
* User Stories covered in this Sprint
  - As a teacher I want to evaluate the students' ability to "raise" a detailed design into a workable software architecture solution so that I know they fulfil the corresponding course goals.
  - As a teacher I want to evaluate the students' ability to "raise" a detailed design into a workable software architecture solution so that I know they have an understanding of software architecture solutions and how they work.
  - As a teacher I want to evaluate the students' ability to test an implemented system according to a test plan so that I know they understand how to translate a design to a test plan and how to execute this test plan.
* Course Goals covered in this Sprint
  - (PA1415, PA1443) på en grundläggande nivå i grupp kunna planera och genomföra testning av producerad programvara, baserat på en kravspecifikation.

  *Kunskap och Förståelse*
  - (PA1443) kunna visa kunskap om grundläggande mjukvaruarkitekturstilar.

  *Färdigheter och förmåga*
  - (PA1443) kunna tillämpa grundläggande arkitekturstilar för ett mjukvarusystem.
  - (PA1443) kunna resonera om de kvalitetsegenskaper ett system med en viss arkitekturstil har eller bör ha.
  - (PA1443) kunna resonera om och skapa en grundläggande testplan för ett objektorienterat system.

  *Värderingsförmåga och förhållningssätt*
  - (PA1434, PA1435, PA1443) kunna analysera och kritiskt diskutera en design för eventuella förbättringar.
* Introduction
  In this release sprint you design a test strategy for the first iteration of the system you have been designing. You also construct a software architecture for the system. An embryo to this ought to be your class and package diagram; there should be some form of connection between what you have done previously and the architecture created in this assignment, even if we do not explicitly ask you to make a complete mapping down to the design level.

  You use the initial software architecture and the quality attribute scenarios you create as input for refining it with the help of the architecture tactics so that the quality attribute scenarios are addressed.

  And, at the end of the day, make sure that your test plan still holds for your revised architecture as well.

#+BEGIN_SRC dot :file ./images/FArch1.png
digraph{
compound=true;
#rankdir=LR;
size=10;
node [colorscheme="accent4", style=radial, fillcolor=1, shape=note];

sd [label="System Description", shape=parallelogram];
sd -> luc [lhead=cluster_a0];
sd -> a1 [lhead=cluster_a1];

subgraph cluster_a0 {
label="3 week roll call\nList of Use Cases";
luc [label="Use Case 1\nUse Case 2\n...\nUse case n"];
}

luc2 [label="Use Case 1\nUse Case 2\n...\nUse case n", style=dashed];
luc2 -> a1 [lhead=cluster_a1];

subgraph cluster_a1 {
label="User Stories\nand\nUse Case Diagrams";
a1 [label="Use Case Overview\nImplementation Plan\n(User Stories)" shape=folder];
duc [label="Detailed Use Cases for Iteration 1\n----------\nUse Case 1\nUse Case 2\n...\nUse Case n"];
a1->duc;
}

duc2 [label="Detailed Use Cases for Iteration 1\n----------\nUse Case 1\nUse Case 2\n...\nUse Case n", style=dashed];
duc2 -> ssd [lhead=cluster_a2];

subgraph cluster_a2 {
label="Object Oriented Design";
ssd [label="System Sequence Diagrams" shape=ellipse, style=dashed];
id [label="Interaction Diagrams\n----------\nPrioritised List of Use Cases (repeated)\nSystem Events\nInteraction Diagrams\n"];
cd [label="Class and Package Diagram"];
ssd->id->cd;
}

cdd [label="Class and Package Diagram", style=dashed];
cdd -> isa [lhead=cluster_a3];
cdd -> stp [lhead=cluster_a3];
duc2 -> stp [lhead=cluster_a3];

subgraph cluster_a3 {
label="Software Architecture and Testing";
stp [label="System Test Plan"];
qas [label="Quality Attribute Scenarios", shape=ellipse, style=dashed];
isa [label="Initial Software Architecture", shape=ellipse, style=dashed];
sa [label="Software Architecture and Architecture Tactics"];
isa -> sa
qas -> sa
}

#sd -> a1
#sd -> luc -> a1
#duc -> ssd
# cd -> cd2
}
#+END_SRC

#+RESULTS:
[[file:./images/FArch1.png]]

* Learning Material
  Please review the sprints concerning
  - [[./Testing.org][Testing]]
  - [[./Interactions-Structure.org][Interactions and Structure]]
  - [[./Intro-Architectures.org][Introduction to Software Architectures]]
  - [[./Architecture-Patterns.org][Software Architecture Patterns]]
* Experiential Learning
** Assignment: System Testing
   Create a test plan for your system that builds upon your previously created test suite.

   {{{tasks}}}
   - Describe your test strategy.
   - Describe your system tests.

#+BEGIN_info
{{{DocStructure}}}

{{{assignment(System Test Plan)}}}
#+INCLUDE: "./DocStruct.org" org

3. [@3] Test Strategy
   - Describe your test strategy:
     - What types of tests will you run?
     - When will you run them?
     - According to what rules will you run and re-run your tests?
     - Which parts of your tests will be automated, and which parts will be manual?
     - What tools will you use for automated testing?
     - How will you ensure that as much as possible of your system is tested?
       - How will you calculate your test coverage?
4. System Tests
   - Describe your system tests:
     - What are your test items?
     - Which features do you plan on testing?
       - How?
       - When?
       - Rules for testing and re-testing the feature?
     - What is the test environment for each feature test (entry and exit criteria)?
     - What are pass/fail criteria for each feature test?
     - What are your test deliverables for each feature test?
#+END_info

{{{commit}}}

#+BEGIN_tip
{{{condSat}}}

When marking this part of the assignment we are looking for the following:

0. [@0] Does the title page contain a table with authors and author contribution
1. Size of assignment: Are there 5-10 features to be tested?
2. Scope of assignment: Does the test strategy contain a mixture of exploratory testing and regression testing techniques?
3. Do the described system tests match the described test strategy?
4. Is there a clear test strategy that will exercise relevant parts of the system?
#+END_tip
   
** Assignment Submission   
   {{{submit}}}
   
   Your submission shall include the following documents:
   - System Test Plan
   - [[file:./Architecture-Patterns.org::*Assignment: Architecture Tactics][Software Architecture and Architecture Tactics]]
* Sprint Acceptance Tests
  You are done with this sprint when:
  - [[./org/checked.png]] You have submitted the documents for marking.
  - [[./org/checked.png]] You have received a passing grade from the teacher.

  You may be asked to complement your submission with additional information.

  You may also have:
  - Updated your Sprint Test Plan
  - Updated your Course Backlog   

